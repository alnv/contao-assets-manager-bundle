<?php $GLOBALS['TL_CSS']['v-component'] = 'bundles/alnvcontaoassetsmanager/css/v-component.css|static'; ?>
<?php $objAssetsManager = \Alnv\ContaoAssetsManagerBundle\Library\AssetsManager::getInstance(); ?>
<script defer>
    document.addEventListener( 'DOMContentLoaded', function() {
        var objVueScript = document.createElement('script');
        objVueScript.id = 'js_assetsmanager';
        objVueScript.async = true;
        objVueScript.onload = function () {
            var objData = {
                total: 0,
                shared: {},
                perProduct: 0
            };
            var objVueInstances = [];
            var arrVuesDocuments = document.querySelectorAll('.v-component');
            if ( arrVuesDocuments.length ) {
                for ( var i = 0; i < arrVuesDocuments.length; i++ ) {
                    var objVue = new Vue({
                        el: arrVuesDocuments[i],
                        data: function () {
                            return objData;
                        },
                        methods: {
                            onChange: function ( component ) {
                                for ( var i = 0; i < objVueInstances.length; i++ ) {
                                    if ( !objVueInstances[i].$children.length ) {
                                        continue;
                                    }
                                    for ( var j = 0; j < objVueInstances[i].$children.length; j++ ) {
                                        if ( component && component.$vnode.tag === objVueInstances[i].$children[j].$vnode.tag ) {
                                            continue;
                                        }
                                        if ( typeof objVueInstances[i].$children[j].onChange !== 'undefined' ) {
                                            objVueInstances[i].$children[j].onChange( this.shared );
                                        }
                                    }
                                }
                            }
                        },
                        mounted: function () {
                            if ( this.$el.hasOwnProperty('add') ) {
                                this.$el.classList.add('loaded');
                            }
                        }
                    });
                    objVueInstances.push( objVue );
                }
            }
        };
        objVueScript.src = '<?= $objAssetsManager->getCombinedAssets() ?>';
        document.head.appendChild( objVueScript );
    });
</script>
